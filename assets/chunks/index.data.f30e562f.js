const a=JSON.parse(`{"index.data.js.timestamp-1698947772788-84b1076b5ab5d.mjs":"// data/sample/createData.js\\nimport fs from \\"fs\\";\\nimport path from \\"path\\";\\nfunction createData(dir) {\\n  const fileNames = fs.readdirSync(dir);\\n  const result = {};\\n  fileNames.forEach((name) => {\\n    const fullPath = path.join(dir, name);\\n    if (fs.statSync(fullPath).isDirectory()) {\\n      result[name] = createData(fullPath);\\n    } else {\\n      if (name !== \\"index.data.js\\" && name !== \\"index.md\\") {\\n        result[name] = fs.readFileSync(fullPath, \\"utf-8\\");\\n      }\\n    }\\n  });\\n  return result;\\n}\\nvar createData_default = createData;\\n\\n// data/sample/data/index.data.js\\nvar __vite_injected_original_dirname = \\"/Users/lihu/Desktop/klinecharts/core/docs/data/sample/data\\";\\nvar index_data_default = {\\n  load() {\\n    return createData_default(__vite_injected_original_dirname);\\n  }\\n};\\nexport {\\n  index_data_default as default\\n};\\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZGF0YS9zYW1wbGUvY3JlYXRlRGF0YS5qcyIsICJkYXRhL3NhbXBsZS9kYXRhL2luZGV4LmRhdGEuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCIvVXNlcnMvbGlodS9EZXNrdG9wL2tsaW5lY2hhcnRzL2NvcmUvZG9jcy9kYXRhL3NhbXBsZVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL1VzZXJzL2xpaHUvRGVza3RvcC9rbGluZWNoYXJ0cy9jb3JlL2RvY3MvZGF0YS9zYW1wbGUvY3JlYXRlRGF0YS5qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvbGlodS9EZXNrdG9wL2tsaW5lY2hhcnRzL2NvcmUvZG9jcy9kYXRhL3NhbXBsZS9jcmVhdGVEYXRhLmpzXCI7aW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcblxuZnVuY3Rpb24gY3JlYXRlRGF0YSAoZGlyKSB7XG4gIGNvbnN0IGZpbGVOYW1lcyA9IGZzLnJlYWRkaXJTeW5jKGRpcilcbiAgY29uc3QgcmVzdWx0ID0ge31cbiAgZmlsZU5hbWVzLmZvckVhY2gobmFtZSA9PiB7XG4gICAgY29uc3QgZnVsbFBhdGggPSBwYXRoLmpvaW4oZGlyLCBuYW1lKVxuICAgIGlmIChmcy5zdGF0U3luYyhmdWxsUGF0aCkuaXNEaXJlY3RvcnkoKSkge1xuICAgICAgcmVzdWx0W25hbWVdID0gY3JlYXRlRGF0YShmdWxsUGF0aClcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKG5hbWUgIT09ICdpbmRleC5kYXRhLmpzJyAmJiBuYW1lICE9PSAnaW5kZXgubWQnKSB7XG4gICAgICAgIHJlc3VsdFtuYW1lXSA9IGZzLnJlYWRGaWxlU3luYyhmdWxsUGF0aCwgJ3V0Zi04JykgXG4gICAgICB9XG4gICAgfVxuICB9KVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZURhdGFcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2xpaHUvRGVza3RvcC9rbGluZWNoYXJ0cy9jb3JlL2RvY3MvZGF0YS9zYW1wbGUvZGF0YVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiL1VzZXJzL2xpaHUvRGVza3RvcC9rbGluZWNoYXJ0cy9jb3JlL2RvY3MvZGF0YS9zYW1wbGUvZGF0YS9pbmRleC5kYXRhLmpzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9Vc2Vycy9saWh1L0Rlc2t0b3Ava2xpbmVjaGFydHMvY29yZS9kb2NzL2RhdGEvc2FtcGxlL2RhdGEvaW5kZXguZGF0YS5qc1wiO2ltcG9ydCBjcmVhdGVEYXRhIGZyb20gJy4uL2NyZWF0ZURhdGEnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbG9hZCAoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZURhdGEoX19kaXJuYW1lKVxuICB9XG59Il0sCiAgIm1hcHBpbmdzIjogIjtBQUErVSxPQUFPLFFBQVE7QUFDOVYsT0FBTyxVQUFVO0FBRWpCLFNBQVMsV0FBWSxLQUFLO0FBQ3hCLFFBQU0sWUFBWSxHQUFHLFlBQVksR0FBRztBQUNwQyxRQUFNLFNBQVMsQ0FBQztBQUNoQixZQUFVLFFBQVEsVUFBUTtBQUN4QixVQUFNLFdBQVcsS0FBSyxLQUFLLEtBQUssSUFBSTtBQUNwQyxRQUFJLEdBQUcsU0FBUyxRQUFRLEVBQUUsWUFBWSxHQUFHO0FBQ3ZDLGFBQU8sSUFBSSxJQUFJLFdBQVcsUUFBUTtBQUFBLElBQ3BDLE9BQU87QUFDTCxVQUFJLFNBQVMsbUJBQW1CLFNBQVMsWUFBWTtBQUNuRCxlQUFPLElBQUksSUFBSSxHQUFHLGFBQWEsVUFBVSxPQUFPO0FBQUEsTUFDbEQ7QUFBQSxJQUNGO0FBQUEsRUFDRixDQUFDO0FBQ0QsU0FBTztBQUNUO0FBRUEsSUFBTyxxQkFBUTs7O0FDbkJmLElBQU0sbUNBQW1DO0FBRXpDLElBQU8scUJBQVE7QUFBQSxFQUNiLE9BQVE7QUFDTixXQUFPLG1CQUFXLGdDQUFTO0FBQUEsRUFDN0I7QUFDRjsiLAogICJuYW1lcyI6IFtdCn0K\\n","index.html":"<div id=\\"k-line-chart\\" style=\\"height:430px\\"/>","index.js":"import { init } from 'klinecharts'\\n\\nfunction genData (timestamp = new Date().getTime(), length = 800) {\\n  let basePrice = 5000\\n  timestamp = Math.floor(timestamp / 1000 / 60) * 60 * 1000 - length * 60 * 1000\\n  const dataList = []\\n  for (let i = 0; i < length; i++) {\\n    const prices = []\\n    for (let j = 0; j < 4; j++) {\\n      prices.push(basePrice + Math.random() * 60 - 30)\\n    }\\n    prices.sort()\\n    const open = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const high = +(prices[3].toFixed(2))\\n    const low = +(prices[0].toFixed(2))\\n    const close = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const volume = Math.round(Math.random() * 100) + 10\\n    const turnover = (open + high + low + close) / 4 * volume\\n    dataList.push({ timestamp, open, high,low, close, volume, turnover })\\n\\n    basePrice = close\\n    timestamp += 60 * 1000\\n  }\\n  return dataList\\n}\\n\\nconst chart = init('k-line-chart')\\nchart.applyNewData(genData())\\nchart.loadMore((timestamp) => {\\n  loadMoreTimer = setTimeout(() => {\\n    chart.applyMoreData(genData(timestamp), true)\\n  }, 2000)\\n})\\nchart.applyNewData(genData(), true)\\nupdateData()\\n\\nfunction updateData () {\\n  setTimeout(() => {\\n    const dataList = chart.getDataList()\\n    const lastData = dataList[dataList.length - 1]\\n    const newData = { ...lastData }\\n    newData.close += (Math.random() * 20 - 10)\\n    newData.high = Math.max(newData.high, newData.close)\\n    newData.low = Math.min(newData.low, newData.close)\\n    newData.volume += Math.round(Math.random() * 10)\\n    chart.updateData(newData)\\n    updateData()\\n  }, 600)\\n}\\n"}`);export{a as d};
